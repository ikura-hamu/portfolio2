---
import { getEntry } from "astro:content";
import { Icon } from "astro-icon/components";

import { replaceURL } from "@/util/url";
import ViewMoreButton from "./ViewMoreButton.astro";

interface Props {
  workType: string;
  extraContent?: {
    icon: string;
    name: string;
    url: string;
  };
}

const { workType, extraContent } = Astro.props;
const allWorks = await getEntry("work", workType);
if (!allWorks) {
  throw new Error(`No works found ${workType}`);
}

const works = allWorks.data.map((work) => {
  return {
    title: work.title,
    subtitle: work.subtitle,
    heroImage: work.heroImage,
    tags: work.tags,
    description: replaceURL(work.description),
    links: work.links,
  };
});
---

<div class="flex flex-col">
  <div class="grid grid-cols-[repeat(auto-fill,_minmax(300px,_1fr))]">
    {
      works.map((work) => (
        <div class="flex flex-col border-2 border-dark rounded-md m-1 h-[325px] min-w-[300px] max-w-full p-1">
          <a href={work.links.filter((link) => link.primary)[0].url}>
            <div class="flex justify-center h-32">
              <img src={work.heroImage} class="object-contain h-full w-full" />
            </div>
          </a>

          <h5
            class="truncate my-0.5 hover:whitespace-normal hover:leading-tight"
            title={work.title}
          >
            <a
              href={work.links.filter((link) => link.primary)[0].url}
              class="text-dark"
            >
              {work.title}
            </a>
          </h5>

          {work.subtitle && <h6 class="leading-tight my-0">{work.subtitle}</h6>}

          <div class="flex">
            {work.tags.map((tag) => (
              <div class="text-sm mx-1 bg-primary text-white rounded-md px-1">
                #{tag}
              </div>
            ))}
          </div>

          <div class="text-base py-1" set:html={work.description} />

          <div class="grid grid-cols-3 mt-auto">
            {work.links.map((link) => (
              <a
                href={link.url}
                class="mx-1 rounded-lg hover:bg-slate-100 hover:duration-150"
                title={link.name}
              >
                <div class="flex items-end self-end text-primary">
                  <Icon name={link.icon} class="text-3xl" />{" "}
                  <div class="text-xs">{link.name}</div>
                </div>
              </a>
            ))}
          </div>
        </div>
      ))
    }
  </div>

  {
    extraContent && (
      <ViewMoreButton
        extraContent={{
          icon: extraContent.icon,
          name: extraContent.name,
          url: extraContent.url,
        }}
      />
    )
  }
</div>
